openapi: 3.0.0
info:
  description: Eine API zur Verbindung mit unserer Supabase-Datenbank
  title: LaendleGuessr
  version: 1.0.0
  description: Diese OpenAPI-Spezifikation beschreibt die REST-API für das LaendleGuessr-Projekt.
servers:
  - url: /
    description: Lokaler Server

paths:
  /all_item_user/{uid}:
    get:
      operationId: all_items_owned_by
      summary: Alle Items eines Users bekommen
      description: Gibt alle Items zurück, die einem bestimmten Benutzer gehören.
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: integer
          description: Die eindeutige Benutzer-ID
      responses:
        "200":
          description: Erfolgreiche Antwort mit allen Items des Benutzers
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - item
      x-openapi-router-controller: openapi_server.controllers.item_controller

  /all_quests:
    get:
      operationId: all_quests_get
      summary: Alle Quests bekommen
      description: Gibt eine Liste aller verfügbaren Quests zurück.
      responses:
        "200":
          description: Erfolgreiche Antwort mit allen Quests
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller

  /all_quests_user/{uid}:
    get:
      operationId: all_quests_done_by
      summary: Alle gemachten Quests eines Users bekommen
      description: Gibt alle Quests zurück, die von einem bestimmten Benutzer abgeschlossen wurden.
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: integer
          description: Die eindeutige Benutzer-ID
      responses:
        "200":
          description: Erfolgreiche Antwort mit allen abgeschlossenen Quests des Benutzers
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller

  /dailyquest/{city}:
    get:
      operationId: dailyquest_get
      summary: Derzeitige DailyQuest einer Stadt
      description: Gibt die aktuelle DailyQuest für eine bestimmte Stadt zurück.
      parameters:
        - in: path
          name: city
          required: true
          schema:
            type: string
          description: Name der Stadt
      responses:
        "200":
          description: Erfolgreiche Antwort mit der aktuellen DailyQuest
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller
  /activequest/{uid}:
    get:
      operationId: activequest_get
      summary: Aktive Quest eines Users abrufen
      description: Gibt die aktuell aktive Quest eines bestimmten Benutzers zurück.
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: integer
          description: Die eindeutige Benutzer-ID
      responses:
        "200":
          description: Erfolgreiche Antwort mit der aktiven Quest
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller
    delete:
      operationId: activequest_delete
      summary: Aktive Quest eines Users entfernen
      description: Entfernt die aktuell aktive Quest eines bestimmten Benutzers.
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: integer
          description: Die eindeutige Benutzer-ID
      responses:
        "200":
          description: Erfolgreich entfernt
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller
  /activequest:
    post:
      operationId: activequest_post
      summary: Aktive Quest für User setzen
      description: Setzt eine neue aktive Quest für einen Benutzer.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: integer
                  description: Die eindeutige Benutzer-ID
                qid:
                  type: integer
                  description: Die eindeutige Quest-ID
              required:
                - uid
                - qid
      responses:
        "200":
          description: Erfolgreich hinzugefügt
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller
  
  /activequest_started/{uid}:
    get:
      operationId: activequest_started_get
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Erfolgreich hinzugefügt
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Startzeit der aktiven Quest eines Users abrufen
      x-openapi-router-controller: openapi_server.controllers.quest_controller
  /activequest_started/{uid}:
    get:
      operationId: activequest_started_get
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Erfolgreich hinzugefügt
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Startzeit der aktiven Quest eines Users abrufen
      x-openapi-router-controller: openapi_server.controllers.quest_controller

  /activequest/{uid}/stepcount:
    put:
      operationId: activequest_update_stepCount
      summary: Aktualisiert die Schrittzahl für die aktive Quest eines Benutzers
      description: Aktualisiert die aktuelle Schrittzahl für die aktive Quest eines bestimmten Benutzers.
      parameters:
        - name: uid
          in: path
          required: true
          description: Die eindeutige Benutzer-ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                step_count:
                  type: integer
                  description: Die neue Schrittzahl für die aktive Quest.
              required:
                - step_count
      responses:
        "200":
          description: Schrittzahl erfolgreich aktualisiert
        "400":
          description: Ungültige Eingabe oder Fehler beim Aktualisieren der Schrittzahl
        "404":
          description: Aktive Quest für den Benutzer nicht gefunden
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller
    get:
      operationId: activequest_get_stepCount
      summary: Ruft die Schrittzahl der aktiven Quest eines Benutzers ab
      description: Gibt die aktuelle Schrittzahl der aktiven Quest eines bestimmten Benutzers zurück.
      parameters:
        - name: uid
          in: path
          required: true
          description: Die eindeutige Benutzer-ID
          schema:
            type: integer
      responses:
        "200":
          description: Erfolgreiche Abfrage der Schrittzahl
          content:
            application/json:
              schema:
                type: object
                properties:
                  step_count:
                    type: integer
                    description: Die aktuelle Schrittzahl der aktiven Quest.
        "404":
          description: Aktive Quest für den Benutzer nicht gefunden oder Benutzer hat keine Schrittzahl
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller


  /quest/{qid}:
    get:
      operationId: quest_get
      parameters:
        - in: path
          name: qid
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Quest mit bestimmter ID anzeigen
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller

  /item:
    get:
      operationId: all_items_get
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Alle Items anzeigen
      tags:
        - item
      x-openapi-router-controller: openapi_server.controllers.item_controller

  /item/{id}:
    get:
      operationId: item_get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Item mit bestimmter ID anzeigen
      tags:
        - item
      x-openapi-router-controller: openapi_server.controllers.item_controller

  /quest_user:
    post:
      operationId: quest_user_post
      summary: Einem User eine Quest als gemacht zuschreiben
      description: Verknüpft eine Quest mit einem Benutzer als abgeschlossen und speichert diese Beziehung.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quest_user'
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller

  /user:
    get:
      operationId: all_users_get
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Alle User anzeigen
      tags:
        - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      operationId: user_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Neuen User hinzufügen
      tags:
        - user
      x-openapi-router-controller: openapi_server.controllers.user_controller

  /user/{id}:
    get:
      operationId: user_get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: User mit bestimmter ID anzeigen
      tags:
        - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    put:
      operationId: user_update
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: User bearbeiten
      tags:
        - user
      x-openapi-router-controller: openapi_server.controllers.user_controller

  /user/login:
    post:
      summary: Benutzeranmeldung
      operationId: user_login
      x-openapi-router-controller: openapi_server.controllers.user_controller
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: maxmustermann
                password:
                  type: string
                  example: geheim123
              required:
                - username
                - password
      responses:
        '200':
          description: Erfolgreich angemeldet
          content:
            application/json:
              schema:
                type: object
                properties:
                  nachricht:
                    type: string
                    example: Anmeldung erfolgreich
                  uid:
                    type: string
                  username:
                    type: string
                  coins:
                    type: integer
                  admin:
                    type: boolean
                  city:
                    type: integer
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                type: object
                properties:
                  nachricht:
                    type: string
                    example: Benutzername und Passwort erforderlich
        '401':
          description: Ungültige Anmeldedaten
          content:
            application/json:
              schema:
                type: object
                properties:
                  nachricht:
                    type: string
                    example: Ungültiger Benutzername oder Passwort
  
  /all_time_stats/{uid}:
    get:
      operationId: get_all_time_stats
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Gibt die Allzeit-Statistiken eines Users zurück
      tags:
        - user
      x-openapi-router-controller: openapi_server.controllers.user_controller

  /weeklyquest:
    get:
      operationId: weeklyquest_get
      responses:
        "200":
          description: Erfolgreiche Antwort
        "400":
          description: Ungültige Eingabe
        "503":
          description: Service nicht verfügbar
      summary: Derzeitige globale WeeklyQuest
      tags:
        - quest
      x-openapi-router-controller: openapi_server.controllers.quest_controller

  /healthcheck:
    get:
      operationId: healthcheck
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
      summary: Healthcheck Endpoint
      tags:
        - health
      x-openapi-router-controller: openapi_server.controllers.health_controller

components:
  schemas:

    user_id:
      title: user_id
      description: Repräsentiert die Zuordnung eines Benutzers zu einer Quest inklusive Schritte und Zeit.
      required:
        - uid
        - id
        - steps
        - timeInSeconds
      properties:
        uid:
          type: integer
          minimum: 1
          title: UserID
          description: Die eindeutige ID des Benutzers
        id:
          type: integer
          minimum: 1
          title: ID
          description: Die eindeutige ID der Quest
        steps:
          type: integer
          minimum: 0
          title: Steps
          description: Die Anzahl der Schritte, die der Benutzer für die Quest benötigt hat
        timeInSeconds:
          type: integer
          minimum: 0
          title: Time in Seconds
          description: Die benötigte Zeit in Sekunden für die Quest
      example:
        uid: 3
        id: 4
        steps: 1000
        timeInSeconds: 3600

    user:
      title: user
      description: Repräsentiert einen Benutzer im System.
      required:
        - username
        - password
        - coins
        - admin
        - city
      properties:
        username:
          type: string
          title: Benutzername
          minLength: 3
          maxLength: 30
          description: Der eindeutige Benutzername
        password:
          type: string
          title: Passwort
          description: Das Passwort des Benutzers
        coins:
          type: integer
          title: Coins
          minimum: 0
          description: Die Anzahl der Münzen, die der Benutzer besitzt
        admin:
          type: boolean
          title: Admin
          description: Gibt an, ob der Benutzer Administratorrechte hat
        city:
          type: integer
          title: Stadt
          enum:
            - 0  
            - 1  
            - 2  
            - 3  
            - 4  
          description: Die Stadt-ID, der der Benutzer zugeordnet ist
      example:
        username: keremderkomet
        password: MeinSicheresPasswort123
        coins: 150
        admin: true
        city: 1

    quest_user:
      title: quest_user
      description: Repräsentiert die Beziehung zwischen einem Benutzer und einer abgeschlossenen Quest.
      required:
        - uid
        - id
        - steps
        - timeInSeconds
      properties:
        uid:
          type: integer
          minimum: 1
          description: Die eindeutige ID des Benutzers
        id:
          type: integer
          minimum: 1
          description: Die eindeutige ID der Quest
        steps:
          type: integer
          minimum: 0
          description: Die Anzahl der Schritte, die der Benutzer für die Quest benötigt hat
        timeInSeconds:
          type: integer
          minimum: 0
          description: Die benötigte Zeit in Sekunden für die Quest
      example:
        uid: 3
        id: 4
        steps: 1000
        timeInSeconds: 3600
